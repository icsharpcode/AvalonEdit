trigger:
- master

pr:
- master

variables:
  solution: '**/ICSharpCode.AvalonEdit.sln'
  buildPlatform: 'Any CPU'
  buildVersion: '6.1.0.$(Build.BuildId)'
  nupkgVersion: '6.1.0-preview2'

pool:
  vmImage: 'windows-2019'
strategy:
  matrix:
    Config_Release:
        buildConfiguration: 'Release'
    Config_Debug:
        buildConfiguration: 'Debug'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core 3.1'
  inputs:
    packageType: sdk
    version: '3.1.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet
      
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: Assembly-Info-NetCore@2
  inputs:
    Path: '$(Build.SourcesDirectory)'
    FileNames: '**/ICSharpCode.AvalonEdit.csproj'
    InsertAttributes: false
    FileEncoding: 'auto'
    WriteBOM: false
    VersionNumber: '$(buildVersion)'
    FileVersionNumber: '$(buildVersion)'
    PackageVersion: '$(nupkgVersion)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: ''
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- script: python BuildTools\tidy.py
  displayName: Tab check

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/ICSharpCode.AvalonEdit.csproj'
    includesymbols: true
    versioningScheme: 'off'

- task: CopyFiles@2
  displayName: Move to publish directory
  inputs:
    contents: |
      **\*.nupkg
    targetFolder: $(Build.ArtifactStagingDirectory)
  condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Release'))

- task: PublishPipelineArtifact@0
  displayName: Publish $(BuildConfiguration)
  inputs:
    targetPath: $(Build.ArtifactStagingDirectory)
  condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Release'))